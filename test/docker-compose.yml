version: "3"

services:

  prometheus:
    restart: always
    container_name: prometheus-test
    image: prom/prometheus:v2.53.2
    volumes:
      - ./configuration/prometheus:/etc/prometheus
      - ./prometheus_data:/prometheus
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 500M
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - 9092:9090

  grafana:
    image: grafana/grafana:11.1.3
    restart: unless-stopped
    container_name: grafana-test
    volumes:
      - ./grafana_data:/var/lib/grafana
#      - ./test_stack/certs/grafana.crt:/etc/grafana/certs/grafana.crt
#      - ./test_stack/certs/grafana.key:/etc/grafana/certs/grafana.key
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 400M
        reservations:
          memory: 200M
    ports:
      - 3002:3000
    environment:
#      - GF_SERVER_PROTOCOL=https
#      - GF_SERVER_CERT_FILE=/etc/grafana/certs/grafana.crt
#      - GF_SERVER_CERT_KEY=/etc/grafana/certs/grafana.key
      - GF_RENDERING_SERVER_URL=http://render:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3002/
      - GF_LOG_FILTERS=rendering:debug
      - GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE=true
      - GF_DATE_FORMATS_DEFAULT_TIMEZONE=Asia/Almaty
  renderer:
    restart: always
    container_name: grafana-image-renderer-test
    image: grafana/grafana-image-renderer:latest
    environment:
      - IGNORE_HTTPS_ERRORS=true
      - GF_RENDERING_IGNORE_HTTPS_ERRORS=true
      - BROWSER_TZ=Asia/Almaty
    ports:
      - 8082:8081
    volumes:
      - ./configuration/renderer/config.json:/usr/src/app/config.json