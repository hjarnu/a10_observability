version: "3"

services:

  prometheus:
    restart: unless-stopped
    container_name: prometheus-prod
    image: prom/prometheus:v2.53.2
    volumes:
      - ./configuration/prometheus:/etc/prometheus
      - ./prometheus_data:/prometheus
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          memory: 500M
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - 9090:9090
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.2

  grafana:
    image: grafana/grafana:11.1.3
    restart: unless-stopped
    container_name: grafana-prod
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./certs/grafana.crt:/etc/grafana/certs/grafana.crt
      - ./certs/grafana.key:/etc/grafana/certs/grafana.key
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 400M
        reservations:
          memory: 200M
    ports:
      - 3000:3000
    environment:
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_CERT_FILE=/etc/grafana/certs/grafana.crt
      - GF_SERVER_CERT_KEY=/etc/grafana/certs/grafana.key
      - GF_RENDERING_SERVER_URL=http://10.10.10.4:8081/render
      - GF_RENDERING_CALLBACK_URL=https://10.10.10.3:3000/
      - GF_LOG_FILTERS=rendering:debug
      - GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE=true
      - GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE_TIMEOUT=30s
      - GF_DATE_FORMATS_DEFAULT_TIMEZONE=Asia/Almaty
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.3
  renderer:
    restart: unless-stopped
    container_name: image-renderer-prod
    image: grafana/grafana-image-renderer:latest
    environment:
      - IGNORE_HTTPS_ERRORS=true
      - GF_RENDERING_IGNORE_HTTPS_ERRORS=true
      - BROWSER_TZ=Asia/Aqtobe
      - GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE_TIMEOUT=30s
      - GF_PLUGIN_RENDERING_TIMEZONE=Asia/Aqtobe
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          memory: 200M
    volumes:
      - ./configuration/renderer/config.json:/usr/src/app/config.json
    ports:
      - 8081:8081
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.4
  exporter-detector:
    restart: unless-stopped
    container_name: exporter-detector-prod
    image: test-prometheus-exporter
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          memory: 200M
    volumes:
      - ./configuration/exporter-detector/config.yml:/app/config.yml
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.5
  exporter-asta:
    restart: unless-stopped
    container_name: exporter-asta-prod
    image: test-prometheus-exporter
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          memory: 200M
    volumes:
      - ./configuration/exporter-asta/config.yml:/app/config.yml
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.6
  exporter-akto:
    restart: unless-stopped
    container_name: exporter-akto-prod
    image: test-prometheus-exporter
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
        reservations:
          memory: 200M
    volumes:
      - ./configuration/exporter-akto/config.yml:/app/config.yml
    networks:
      monitoring_network:
        ipv4_address: 10.10.10.7
networks:
  monitoring_network:
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24